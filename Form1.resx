<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAACEwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAAAFv
        ck5UAc+id5oAABK8SURBVHja7V0JeFXVtf4TSBAkaCAEAsggUBVawDIq8tA6xyoVRP20oK/49GlUaoW0
        CqJIBZXBUnGkiOIA0oco+qxonxWpRYsQVCDI4IcIMioEDIMJ5K0LCck5a9+cc5M7nHPu/6/v44PcE+7Z
        a/3n7LX3XgNAEARBEARBEARBEARBEARBEARBEARBEARBEARBEAThd6QiTSSVikgunIBT8AvcjAcxDTNE
        psnfbpafnCKfEIFGOjojD3OwFntQirIqUio/WSuf5MkV6VRUENEIF+M5bMJhi+HtcliumInL5GoiQGiI
        gfhfecbLXMpevI2rkUHFBQFpuADzsM+18SvkB/mtC+S3CV+jHSZiZ8TGr5CdmIL2VKJ/n/3BWFpj41dI
        gUwGdAt9iBw8gt21Nn9I9shbJIcK9Rd64z0ciYr5Q3JE/rfeVKpfUAeDUBg141fIlzKh1KFyvY/6GIFd
        UTd/SHYhHw2oYG/jZDyK/TExf0gOYBIyqWTvojmeQ0nMzB+SEsyUbyE8iVaYE0XHL7xDOBenUNneQxvM
        j7nxK+R1tKXCvYXWYpSyOMob8o2EZ9AS8+Jq/pDMk28lPIGmeCXu5g/JbGRT+YnHSXja4Yw/VnIYz8q3
        EwlFPYzHjwkxf0h+lG9nGFkCkYo8/JAw8x+LGriDQaWJw0BsT6j5Q7IDg2iIxKAv1ibc/CFZh3NojPij
        PT7yhPlD8hE60CDx9v1necb8IXmJ64F4oi5GJdD3N68HRstdEXHClTE68a+NfCcuKREXnIEVnjN/SD5D
        Jxon9mgk822ZR+UVZhTFHr/FQc8S4KDcXQpNFEuchY2eNX9IvpY7JGKGJnjT0+YPyZtoTEPFCiNjHPEX
        nQXhSE4DsUEvj7/+K2Sj3CkRdWTgVV+YPyRzmVoefQyLYbx/tGU/fkODRRenenTzJ3xOMdPKo4g6eNhX
        5g/Jw8wkjB764lvfEeBbRglECw0SFPVb+41hppJGBQNQ5EsCFOEKGq/2aIyFvjR/SP7GXOLaYwgO+JYA
        B/BrGrB2yMI/fGv+kLyPJjRibXCjhw9/3R0Q30Aj1hxN8IGvzR+SD/gOqDmu9dH2b/ht4WtoyJohA2/5
        3vwhWcCjoZrhEp+u/3WhyUtozMiRhhmBMH9IZrDodOTogk2BIcAm/IwGjRT3Bsb8ocpi99KgkW4A/StA
        BCiT0WTRqJHgUuwNFAH2yogI16iDPwfK/CGZykoi7tEKKwNHgC9YVs49rkhw5Z/YVBO6nIZ1hxRMiklR
        t4MyE3+PndiKzfgKX2I1PkeByBfyt7Xyk83YJp/uxj65MhY1hycyYcTtEdCSqBh8rxj0S3yAV/AY7sPt
        uE4csX7ojtPRGi3QHM2QjaYi2fK3HPlJG3RCD/THZRiC4XhA/JBXsRjrsF0ocSQqKwEmjblCD+yoRTn3
        XfgM/yNP221i7s5i2JNrXMkvBfWRKTN3F6HE7ZiC1+VdsROHalFPrDuN6wb/VYMMwEPYgnfF7MPQW57n
        2ARjnij/c0/cIN/yLr6pQZxSidwd4YhUPBGRWvdhubysh8rTHr/iDI1wGq6Vb/00wuOqx7kUdMZJ+Lvr
        aJsVeBS5MpunJoiq2bgAjwgNil3e8XusIOKM1tjgQpU7MRvXo5Un1izNcCVeEofT+a7Xs9eIM/rKUs0p
        5+Zp/IfHijSfgF4yJWxxrCR2Ng3shKuqDQPbJ4u6czxaka+uOKDPV9umuph1hZ1xK0rDKvBzcb0i8fDr
        yNWNZSnYQRZg52MArpMVxnDkYzTGYbz4D5OPyiRMkH+NwyjcjTzx1K8Rv6IfuqGtvNwzxfePJMmzvnzH
        8rD3X4pbaGAnjAqrvLni6TubvBFaiLkHiikflKniNfwTa2XS2Ik9+EHcxhKHLZ3DcsWBozuGO2SptxIf
        yv/wFO4Xw12OLuJuZrhwOH+COWFJzLgARzwYZg39ZDXh1SmyduiAX8qz/QwWYo2YuzjKXURK5dW+Havx
        N0zDHbgQ7dCwmjFkyd2a9zLG0sBOeMiouFlhsuwaoKO8dP8kS8evq519o3uqUISv8JZMGgNkzWJuLZ+J
        F42/+0cauCYEWG4ox54mr9o8eUFvTGDuULG8bZ7HULQxHPN0RIHhN8bRwE6411B47b9t19TDuZguT2Gp
        Jw56D2GVOJFdlbOYZ5gG/kADO0GfBKyXGdeKXMcVd/xlrawzrGivtrRKcBMN7ISLVTTgOyqz5joPpowe
        kruyIkNVNijCRTSwEzqocpCfqgaNF3swZ6hI7sqKpvi3KiHJ2mGOaKgyAotwge2abrWIGIiV7BAvwIrz
        sUfVEW5IAzsj39F3boEvPUeANXJXVoxT1+TTuG7QBzttivvQtguQIX6B1wjwts1TaYzF6gSzD43rBier
        sjDfo59t52+K5wgw2TaK/upU830ZGeEK9zvuoN3osa5hh1QpmPHqmvtpWLc4F7ttyvvEthLogq0eqwtq
        zf9tJmsX6xW7ZVSES2RikYoDsKZVNPJY9UD7XsUAldqyiEHhkeAepeK/2Ios3OMpAtxjubd0zHS4gnBA
        d/WK32iLBujpgc7hFbJd7sY6QdmLW2xlTkBkaID5qsiC9Rk6UV2ROJkvd1MV96krXmPh6EjxG+XnF9hi
        aod45ETgoNxJVbTBZ+o8kx1EIkYr1SOkBLdbrmguawNvVP9obrmv36pj6hWeCGAPwG7Acnm6qmK4ByIC
        7NEK7QzNbbgDUCN0Va7UYYy1BGW2wtKEE+ATyxlAKsapsNNN4hQSNUAanlLq3mqrtXNLLbJ1o7MDaA30
        vtSQIfQUqwTWFGcZ9vtWYXAVhTZJ8IbQwiqxymlyZ6sNlOURUI1RB48ZlP49bqoShHmROjuMn+yqUgQ2
        BcOMSW1T2D2s5sjBGONSr7BKlHAaHolJQRc35R8frfIuam94+kNLxDEyCiJi1EcvcacKwuQJHrCUYG+Z
        oK4CiyyLu8FhSkbsl1GMk9HUp1HdP/fXYm616db2w9f+Cagr/A3Os9xD9QfU2/BX/JqF4pyf+x6y0Fvm
        WH5lp7iHVtwct7ygitPJW2zJIGeLR+C0Y7hcRteD7wIzMjEQc1ye8s9QO+v1MD6OISIlmCDfaD+9eM7V
        726VUV7JdnJWNJI5/T2XxSH34SXbfuAxnITpcXIGjwgBTzbcQRu5M3fvoR/wroyYfUTK9876YZ6rKjtH
        ZKaficvDhlZniwHiQYHZaBbmDjLk7mbia1eZycUy6n4sGtUE97pK89qPf+EP6BImF7fSfXwxymnhOjP4
        ZRX+bUU6OmGk3K0bSn+LUcndU+ynmO+iJuAWvCIvzGxX/2MWnorh5vCPeNblfTSVeX4WNrvwJuarhJKk
        wYXGBGrrc78U96FbRAWhMvBAjBLHivCgeBrukS53PgpLHFvfrRBNJCGuUjmA9tfjbAy2nbS7VfwQrIu6
        +TfgBocJyIxmMooXHd4FGzEo2QpJX13NzH8Qy+Qp7l6rQnA9sCCKy8ISvKV2HiJBPXnNj5FRHaxmmrs6
        mcx/Wdidu714A9dHZfe8Me52VXLSWb5CflQ6/uTIyBaEbYXzNXKTxfw9sSqMi/V3/Cqqq+OueKaWecS7
        MB0/j+IdZWAAFoZ5N62S91YSoGWYWsCbMSIGnbXSZa0901UZV9P+/Sycr3b8orH0HYFvjN/4rsMSMwBI
        x2TjZs0SUXWs3KB66I2HZAYudm36YnyBiegTA+MfQwrOMzbFOIJJNXI0fYQBKusvJG/h9Jh/c46szKfi
        Y5kSDlVzyrhDrpiKgWgV8z2604ytsXeLhgKMHJUzH5IFxr392Gw7Z8k8OxTj8ILMxEtRKG7iBvlzqfzr
        BfnpUPk0K27bs21l5Fobi4McQHK3IYx7ETomZCpqJKZuLnNuqHtQlvwrEa/eDioJNlST9HdBNX87mVnt
        w12X5CGTZ2G9oSR222AOdoQ6qClmFx3RQLE6cArkOyBb3Cs711+2JVUmI04ULehks+zgDXSgYvoWRsyX
        TwNb1JvxyqANsi6eNfTQqkvrH9XNNKWbZ4Kmm1Yqan6HsX/OiWiN3rgIuQGUi2RkrY2TXl+V3LIqaPnE
        uSpabr5SRUcMl5XxBuxCEfYGUIpkZBvwhoyyo6L96yry8dJgEWCMWu3eZvk8C/lYE+NwLq/IYRRiJJpa
        xp+ndkjGBMn8DRTDt+HMKp//VJ6L0qQwfuUDsEBGXYkzVcWj14NUVKat2u5YXCUyvmtUuoX7T5ag23Ed
        ZKpN8vVB2g7SHsDU4zvurfF+Upo/JP8noz+GVNGI3QsIUIDIaBX6cePxPfk/Ja35jyWPV+QX69zC0cHx
        AOYpD6Di5XdeArP7vdFloH+5JrqpsJV5QfECWmOtbWj/LC+bmmbYHko2eab8HdBYtGLvQtQ6GATQXYAe
        L/cATjWchSWbrCtviZUqWrEHyF4cDALcozyA/yz/5FcRhGkFVYqPxwDp0piBqC9cH3NVZd2KPYCRSW/+
        kIwIuxcwNwi1BFphjTrsrCic/jDNLzKhXBuNRTP2PkQBOBG4UGXqTTu+B/AYzX90KVixFzBNZSMGIGsw
        X3kAlVFAJEBIHjuuj2EqV9r3fcZOwBy18v05CRCGAN1VHtPsWmVIegAtVRzAkiolEUgAKwGaqLC51X6v
        LPYL1T3zySqVM0kAKwHqiHasn+0RDfoaI1SiddX+2SSAlQCm3ukj/Gz+eiridYclA5YEsBOgh/ICXo5Z
        hmIckIOVqrp+FglQDQGyVBeUlX5OFdMNIJ+21M4mAewEqCMasqeL9vcvAe6ypYKX4GbL5ySAnQChorel
        tpTxu/xq/nTMUjV+e5IADgToqSIkZvm1ZkBzfG4byr9tNUBIAE2ALNGSPVm0uT8J0E910LDnu5AAmgB1
        RUvWz78XTfoSd9o8gFJbgzUSwEQAiJbsXsCdfjR/mmqgvAu9SQAXBOitOg/M9GPfsWaqEOyntmwYEsBM
        gKaiKesVBWHrk3sYZ+M72zCmq4xXEsBEgLqiKesV3xkTaT2OPFumXyluVdeQACYCQDRVassmzPOfBzBD
        eQB9SACXBDhLeQF/8ZsX0BTLbENYZih7QgKYCZBt0F5TfxGgl9rPmmHgMAlgJoB+f9r3UD2PG2z1OM2z
        GAlgJoD2oA5hqL8I8LDazepLAkRAgL5qF3WCn8yvk0FWG+tgkwDhCNAChbarXvVTkogud7DA2OyNBAhH
        gIaqlPQiPzWbzFH5wE8am6iTAOEIoAND1vjpTPBUVfpwrPE6EiAcAYBxtqu2+KlkzBmq2EE+CRAhAX5v
        u2orTvMPAbqqPNe7SIAICfA721Xb8TP/EKCzegOMJAEiJIA9p3KbvFd9g3bKB3iABIiQAGNtV232kw/Q
        QnXse9zYEooECEeAVDxhu2q9n/IDGqvSj68ZK16RAOEIoKsHf3S8rIYPoAvDfWZsgUAChCNAMxVR/Vd/
        lYuZok6zepEAERCgj4oImOSvwyB7lqu9OjgJENlpYInfuivpiMA5hloXJICZACfgVRfxVJ6GjmnZhM4k
        gEsCdFbd1T/1WxspXffyiGE7mAQwE+D3qr/y1Lj1M40aBmO/ygxsQQK4IEBLLLVdsR+D4Du0xArbMEpw
        BwngggB3qDIxBX5sK5+C8Wqon9vaJZEAmgAd1Q5AGR6CL9EL3xoGm04CVEOAdNU5pEy02MufBEg3dAPY
        g2tIgGoIcLUqq1fZUcCH6KuOhUMtEbuTAGEI0EO0U6YCQc6Gb5FmNPE/0J4EMBCgvbF91hR/N5E9zcDp
        MrxZfrZNAlQSoA0WGD5b6adAMDNuMnYFeRudSIAqBDhDNKI/KfbbCYD5aHi6cdgf43yDx5uMMhXnqSLR
        x2R6MPqGtVedMCpOBwppfpFCtfNfEQLSHgHBOVhHQ0co6/1aG8yMQbKcoVHdy1ZchUAhBdcb9gQoZtmO
        IcYgWt9TYDON60I2i6ZSEUCkIFeVj6fondLLgvf0V6In3rFFu1Eq5TAW+q0UTORohgmq+gUlJLsx0c/N
        ISI5Ibgc76ugh+SWUnyIK/xaFr4myMbdKORkUP7iL0R+cjz79oOit2l+kXdwOpIUk2l+kclIWvA0MFxm
        EAlAApAAJAAJQAKQACQACUACkAAkAAlAApAAJAAJQAKQACRAYDCJ5heZmLwEGE3zi4xKXgJcgwNJb/4D
        loT5JEA6MtHkqGQa08eTTbaJFio1EvCYoDTk4nksxidH5WMs4xtANLBcNHFMI4tFO7n+LQfhhFTcqspH
        UuyyC7cFMysAOBMbaWAXshHdgkmA4TSuS7kzmAQYS9O6lLHBJMBNKKVxXeUIDAsmAU5FAc3rQgrQLqjr
        gFxjySiKNTn00iDvBHRCPqbjBYpRnhXtnIHAoy7SKUapC4IgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
        CIIgiBrh/wEaCvz7x892qAAAAABJRU5ErkJggg==
</value>
  </data>
</root>